- provide :title, @role.name

- uniq_actions = @permissions.map(&:possible_actions).flatten.uniq

.row
  .large-12-columns
    = form_for @role do |f|
      table.permissions
        thead
          th scope="row" Resource
          - uniq_actions.each do |action|
            th = action.capitalize
        tbody
          - @permissions.each do |permission|
            = f.fields_for :permissions, permission, child_index: permission.id do |ff|
              - if permission.subject_class == Role
                tr.role-row
                  td scope="row" with roles
                  td colspan="#{uniq_actions.count}"
                    ul class="small-block-grid-#{uniq_actions.count}"
                      = ff.collection_check_boxes :subject_ids, Role.all_without_admin, :id, :name do |b|
                        - if can? :read, b.object
                          li.role-container
                            = b.label
                            .switch.tiny
                              = b.check_box disabled: cannot?(:update, User)
                              = b.label { "" }
              - else
                - if permission.possible_actions.any? { |action| can? action, permission.subject_class }
                  tr class="#{permission.subject_class.to_s.underscore}-row"
                    td scope="row" = t permission.subject_class.to_s.underscore
                    - uniq_actions.each do |action|
                      - if permission.possible_actions.include?(action) && can?(action, permission.subject_class)
                        td data-resource="#{permission.subject_class.to_s.underscore}" data-action="#{action}"
                          .switch.tiny
                            = ff.check_box :actions, { multiple: true, disabled: cannot?(:update, User) }, action.to_s, ''
                            = ff.label :actions, action.to_s.humanize, value: action
                      - else
                        td
                      
      = f.submit "Save", class: "button small", disabled: cannot?(:update, User)