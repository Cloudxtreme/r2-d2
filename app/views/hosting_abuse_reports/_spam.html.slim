fieldset#abuse-part-spam
  legend Email Abuse / Spam
  
  .row#detected_by.input.form-field
    .large-3.columns = ff.label :detection_methods, 'Detected by', class: 'right inline'
    .large-9.columns
      .large-5.check-boxes.left
        - HostingAbuseForm::Spam::DETECTION_METHODS.each do |key, val|
          div
            = ff.check_box :detection_methods, { multiple: true }, key
            = ff.label "detection_methods_#{key}".to_sym, val
      .large-7.columns: h6.hint How the issue was detected?
          
  .row#other.input.form-field style="#{hidden_if_blank(@form.abuse_part.other_detection_method)}"
    .large-3.columns = ff.label :other_detection_method, 'Other', class: 'right inline'
    .large-9.columns
      .large-5 = ff.text_field :other_detection_method, validate: true
      
  .row#queue-amount.input.form-field
    .large-3.columns = ff.label :queue_amount, 'Queue Amount', class: 'right inline'
    .large-9.columns
      .large-5.left = ff.text_field :queue_amount, validate: true
      .large-7.columns: h6.hint Amount of emails/bounces queued on the server, plus amount of recipients per message if necessary
  
  - if @form.abuse_part.exim_stopped_required?
    .row.form-field
      .large-3.columns = ff.label :exim_stopped, 'Exim Stopped?', class: 'right inline'
      .large-9.columns
        .large-5.radio-buttons
          = ff.radio_button :exim_stopped, true
          = ff.label :exim_stopped_true, 'Yes'
          = ff.radio_button :exim_stopped, false
          = ff.label :exim_stopped_false, 'No'
  
  - if @form.abuse_part.spam_experts_enabled_required?
    .row.form-field
      .large-3.columns = ff.label :spam_experts_enabled, 'Spam Experts Enabled?', class: 'right inline'
      .large-9.columns
        .large-5.radio-buttons
          = ff.radio_button :spam_experts_enabled, true
          = ff.label :spam_experts_enabled_true, 'Yes'
          = ff.radio_button :spam_experts_enabled, false
          = ff.label :spam_experts_enabled_false, 'No'
        
  .row.form-field
    .large-3.columns = ff.label :blacklisted_ip, 'Blacklisted IP', class: 'right inline'
    .large-9.columns
      .large-5.left = ff.text_field :blacklisted_ip
      .large-7.columns: h6.hint If applicable
      
  .row.form-field
    .large-3.columns = ff.label :mailboxes_count, 'Invilved Mailboxes Count', class: 'right inline'
    .large-9.columns
      .large-5.radio-buttons.left
        = ff.radio_button :mailboxes_count, 1
        = ff.label :mailboxes_count_1, '1'
        = ff.radio_button :mailboxes_count, 2
        = ff.label :mailboxes_count_2, '2'
        = ff.radio_button :mailboxes_count, 3
        = ff.label :mailboxes_count_3, '3'
        = ff.radio_button :mailboxes_count, 4
        = ff.label :mailboxes_count_4, '4'
        = ff.radio_button :mailboxes_count, 0
        = ff.label :mailboxes_count_0, 'more'
      .large-7.columns: h6.hint If less than 5, please reset password for all of them
      
  .row.form-field
    .large-3.columns = ff.label :mailboxes, 'Mailbox(es) Involved', class: 'right inline'
    .large-9.columns
      .large-5.left = ff.text_area :mailboxes
      .large-7.columns: h6.hint Required if password was reset
      
  .row.form-field
    .large-3.columns = ff.label :header, 'Header', class: 'right inline'
    .large-9.columns
      .large-5.left = ff.text_area :header
      .large-7.columns: h6.hint Header of an outbound email or exampe of a bounce/complaint
      
  .row.form-field
    .large-3.columns = ff.label :body, 'Body', class: 'right inline'
    .large-9.columns
      .large-5 = ff.text_area :body